监听器模式有三种角色：事件源、事件和监听者
观察者模式有两个角色：发布者和接收者

GoF <Design patterns :Elements of Reusable Object-Oriented Software>

此所以学者不可以不深思而慎取之

从人的行为来看，事件源就不应该负责监听者注册的，事件源就应该只管自己本身的业务逻辑，触发了事件后通知相关方即可

gj中为对代码的改进

如果有多个监听者，进行一些复杂的处理，这个过程有可能是很耗时的。有些场景下，事件源不需要等待监听器处理完完毕，那么我们可以考虑多线程的方法
将监听器放在单独的一个线程中执行，这就是大家说的一步方式，还可以通过回调机制实现当监听者完成处理后进行相应动作


具体的实现为类名称后为2

到此为止，介绍了java事件的基本概念，基本程序结构，监听注册中心，异步处理等，
有了这些可以将他们全部结合起来，设计一个事件处理框架，提供事件注册中心，支持不同的行为模式
如，同步还是异步，选择监听器模式还是观察者模式，要不要callback，规定事件响应配置文件等

《诗经》里唱诵到：他山之石，可以攻玉
