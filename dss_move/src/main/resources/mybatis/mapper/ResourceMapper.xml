<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kw.kd.dss.dao.bml.ResourceDao">

    <resultMap id="Resource" type="kw.kd.dss.entity.bml.Resource">
        <result property="resourceId" column="resource_id"/>
        <result property="user" column="owner"/>
        <result property="resourceHeader" column="resource_header"/>
        <result property="isPrivate" column="is_private"/>
        <result property="downloadedFileName" column="downloaded_file_name"/>
        <result property="system" column="sys"/>
        <result property="isExpire" column="is_expire"/>
        <result property="expireType" column="expire_type"/>
        <result property="updateTime" column="update_time"/>
        <result property="updator" column="updator"/>
        <result property="enableFlag" column="enable_flag"/>
    </resultMap>





    <sql id="resource_columns">
      `resource_id`,`is_private`, `resource_header`, `downloaded_file_name`, `sys`,
      `create_time`,`owner`,`is_expire`,`expire_time`,`max_version`,`update_time`,`updator`,`enable_flag`
    </sql>


    <select id="getResource" resultMap="Resource" parameterType="java.lang.String">
        select * from linkis_resources where resource_id = #{resourceId} and enable_flag = 1
    </select>

    <select id="getResources" resultMap="Resource" parameterType="java.util.Map">
        select resource_id, owner, sys from linkis_resources
        <where>
            enable_flag = 1
            <if test="resourceId != null and resourceId != '' ">
                and resource_id = #{resourceId}
            </if>
            <if test="owner != null and owner != '' ">
                and owner = #{owner}
            </if>
            <if test="sys != null and sys != '' ">
                and sys = #{sys}
            </if>
        </where>
    </select>

    <update id="deleteResource">
        UPDATE linkis_resources SET
          enable_flag = 0
        WHERE resource_id = #{resourceId} and enable_flag = 1
    </update>

    <update id="batchDeleteResources">
        UPDATE linkis_resources SET
        enable_flag = 0
        <where>
            enable_flag = 1
            <if test="resourceIds != null">
                AND resource_id IN
                <foreach collection="resourceIds" item="resourceId" index="index" separator="," open="("
                         close=")">
                    #{resourceId}
                </foreach>
            </if>
        </where>
    </update>

    <insert id="uploadResource" useGeneratedKeys="true" keyProperty="id" keyColumn="id" parameterType="kw.kd.dss.entity.bml.Resource">
      INSERT INTO linkis_resources(<include refid="resource_columns"/>)
          VALUES (#{resourceId},#{isPrivate},#{resourceHeader},#{downloadedFileName},#{system},
                    #{createTime},#{user},#{isExpire},#{expireTime},#{maxVersion},#{updateTime},
                    #{updator},#{enableFlag})
    </insert>

<select id="getResourceListByProjectID" resultMap="Resource" parameterType="java.util.Map">
    select *  from linkis_resources
    <where>
        enable_flag = 1
    </where>
</select>

    <select id="selectLinkisResourcesList" resultMap="Resource" parameterType="java.util.Map">
     SELECT t1.resource_id as resource_id
     FROM linkis_resources t1
     JOIN
     (SELECT c.json_path FROM dss_flow b  JOIN dss_flow_version c on b.id=c.flow_id AND b.project_id=#{projectID})  t2
     ON t1.resource_id=t2.json_path
    </select>


    <delete id="batchDeleteLinkisRsources">
        delete from linkis_resources where resource_id in
        <foreach collection="array" open="(" close=")" item="item" separator="," >
            #{item}
        </foreach>
    </delete>

    <delete id="batchDeleteLinkisRsourcesVersion">
        delete from linkis_resources_version where resource_id in
        <foreach collection="array" open="(" close=")" item="item" separator="," >
            #{item}
        </foreach>
    </delete>

</mapper>

